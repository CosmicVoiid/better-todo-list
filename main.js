(()=>{"use strict";class e{constructor(e,t,o){this.projectName=e,this.todo_list=t,this.selected=!1}}const t=(()=>{let t=JSON.parse(localStorage.getItem("task.projects"))||[];function o(e){localStorage.setItem("task.projects",JSON.stringify(e))}return{makeProject:function(n,c){let d=new e(n,c);t.push(d),console.log({projectList:t}),o(t)},changeName:function(e,n){t[n].projectName=e,o(t)},removeProject:function(e){t.splice(e,1),o(t)},select:function(e,n){t[e].selected=n,o(t)},saveProject:o,projectList:t}})();class o{constructor(e,t,o,n,c){this.todoName=e,this.description=t,this.date=o,this.priority=n,this.completed=!1}}const n=(()=>{let e=[];return{isSelected:function(){let e=t.projectList;for(let t=0;t<e.length;t++)if(!0===e[t].selected)return t},makeTodo:function(t,n,c,d){let l=new o(t,n,c,d);return e.push(l),l}}})(),c=(()=>{function e(){const e=document.querySelector(".modal"),t=document.querySelector(".modal-overlay");e.classList.toggle("closed"),t.classList.toggle("closed")}function o(){document.querySelector("#todo-btn").classList.add("closed")}function c(){!function(){const e=document.querySelector("#todo-name"),o=document.querySelector("#todo-description"),c=document.querySelector("#todo-date").value,d=document.querySelector("#priority");let r=n.makeTodo(e.value,o.value,c,d.value),s=n.isSelected();t.projectList[s].todo_list.push(r),t.saveProject(t.projectList),console.log(t.projectList[s]),l()}(),e()}const d=document.querySelector("#modal-form");function l(){let e=n.isSelected(),o=t.projectList[e];r(),console.log(o.todo_list);for(let e=0;e<o.todo_list.length;e++)s(o.todo_list[e],e),console.log("test2")}function r(){const e=document.querySelector("#content"),t=document.querySelectorAll(".todo-container");for(let o=0;o<t.length;o++)e.removeChild(t[o])}function s(o,s){const i=document.querySelector("#content"),a=document.createElement("div"),u=document.createElement("input"),m=document.createElement("div"),p=document.createElement("h3"),v=document.createElement("div"),h=document.createElement("input"),L=document.createElement("div"),y=document.createElement("button"),f=document.createElement("button");p.textContent=o.todoName,v.textContent=o.description,h.setAttribute("type","date"),h.value=o.date,u.setAttribute("type","checkbox"),y.textContent="E",f.textContent="X",m.classList.add("todo-text"),a.classList.add("todo-container"),y.classList.add("btn"),f.classList.add("btn"),y.addEventListener("click",(()=>{!function(o){let s=t.projectList[n.isSelected()].todo_list;const i=document.querySelector("#todo-name"),a=document.querySelector("#todo-description"),u=document.querySelector("#todo-date"),m=document.querySelector("#priority");i.value=s[o].todoName,a.value=s[o].description,u.value=s[o].date,m.value=s[o].priority,e(),d.removeEventListener("submit",c),d.addEventListener("submit",(function t(){s[o].todoName=i.value,s[o].description=a.value,s[o].date=u.value,s[o].priority=m.value,r(),l(),e(),i.value="",a.value="",u.value="",m.value="",this.removeEventListener("submit",t),d.addEventListener("submit",c)}))}(s)})),f.addEventListener("click",(()=>{console.log(s),function(e){t.projectList[n.isSelected()].todo_list.splice(e,1),t.saveProject(t.projectList),l()}(s)})),m.appendChild(p),m.appendChild(v),L.appendChild(h),L.appendChild(y),L.appendChild(f),a.appendChild(u),a.appendChild(m),a.appendChild(L),i.append(a)}return d.addEventListener("submit",(e=>{e.preventDefault()})),d.addEventListener("submit",c),{addTodoButton:function(){if(void 0!==n.isSelected()){const t=document.querySelector("#todo-btn");t.classList.remove("closed"),document.querySelector("#modal-exit").addEventListener("click",e),t.addEventListener("click",e)}else o()},removeTodoButton:o,displayTodo:l}})(),d=(()=>{const e=document.querySelector("#projects-container");function o(o,c){const l=document.createElement("div"),s=document.createElement("div"),i=document.createElement("button"),a=document.createElement("button");l.classList.add("project"),s.classList.add("project-title"),i.classList.add("btn"),a.classList.add("btn"),i.textContent="E",a.textContent="X",s.addEventListener("click",(e=>{e.stopPropagation(),r(),t.select(c,!0),d()})),i.addEventListener("click",(e=>{e.stopPropagation(),function(e){const o=document.querySelectorAll(".project"),n=document.querySelectorAll(".project-title"),c=document.createElement("input");c.classList.add("edit-text"),c.setAttribute("type","text"),c.setAttribute("maxlength","10"),c.value=t.projectList[e].projectName,o[e].removeChild(n[e]),o[e].appendChild(c),c.addEventListener("keypress",(o=>{"Enter"===o.key&&(console.log("yes"),t.changeName(c.value,e),d())}))}(c)})),a.addEventListener("click",(o=>{o.stopPropagation(),function(o){const c=document.querySelectorAll(".project");e.removeChild(c[o]),t.removeProject(o),d(),console.log(n.isSelected())}(c)})),s.textContent=o,l.appendChild(s),l.appendChild(i),l.appendChild(a),e.appendChild(l)}function d(){!function(){for(;e.firstChild;)e.removeChild(e.firstChild)}();let n=0,d=t.projectList;for(console.log(d);n<d.length;n++)o(d[n].projectName,n),!0===d[n].selected&&(l(n),c.addTodoButton(),c.displayTodo())}function l(e){r(),t.select(e,!0),document.querySelectorAll(".project")[e].style.cssText="background-color: lightblue"}function r(){for(let e=0;e<t.projectList.length;e++)t.select(e,!1)}return document.querySelector("#add-project").addEventListener("submit",(e=>{e.preventDefault();const o=document.querySelector(".project-name");var n;n=o.value,t.makeProject(n,[]),d(),o.value=""})),{addProject:o,render:d}})();console.log("test"),d.render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,