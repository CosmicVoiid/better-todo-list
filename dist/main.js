(()=>{"use strict";class e{constructor(e,t,o){this.projectName=e,this.todo_list=t,this.selected=!1}}const t=(()=>{let t=JSON.parse(localStorage.getItem("task.projects"))||[];function o(e){localStorage.setItem("task.projects",JSON.stringify(e))}return{makeProject:function(c,n){let r=new e(c,n);t.push(r),console.log({projectList:t}),o(t)},changeName:function(e,c){t[c].projectName=e,o(t)},removeProject:function(e){t.splice(e,1),o(t)},select:function(e,c){t[e].selected=c,o(t)},projectList:t}})(),o=(()=>{const e=document.querySelector("#projects-container");function o(o,n){const l=document.createElement("div"),s=document.createElement("div"),i=document.createElement("button"),a=document.createElement("button");l.classList.add("project"),s.classList.add("project-title"),i.classList.add("btn"),a.classList.add("btn"),i.textContent="E",a.textContent="X",s.addEventListener("click",(e=>{e.stopPropagation(),r(),t.select(n,!0),c()})),i.addEventListener("click",(e=>{e.stopPropagation(),function(e){const o=document.querySelectorAll(".project"),n=document.querySelectorAll(".project-title"),r=document.createElement("input");r.classList.add("edit-text"),r.setAttribute("type","text"),r.setAttribute("maxlength","10"),r.value=t.projectList[e].projectName,o[e].removeChild(n[e]),o[e].appendChild(r),r.addEventListener("keypress",(o=>{"Enter"===o.key&&(console.log("yes"),t.changeName(r.value,e),c())}))}(n)})),a.addEventListener("click",(o=>{o.stopPropagation(),function(o){const n=document.querySelectorAll(".project");e.removeChild(n[o]),t.removeProject(o),c()}(n)})),s.textContent=o,l.appendChild(s),l.appendChild(i),l.appendChild(a),e.appendChild(l)}function c(){!function(){for(;e.firstChild;)e.removeChild(e.firstChild)}();let c=0,r=t.projectList;for(console.log(r);c<r.length;c++)o(r[c].projectName,c),!0===r[c].selected&&n(c)}function n(e){r(),t.select(e,!0),document.querySelectorAll(".project")[e].style.cssText="background-color: lightblue"}function r(){for(let e=0;e<t.projectList.length;e++)t.select(e,!1)}return document.querySelector("#add-project").addEventListener("submit",(e=>{e.preventDefault();const o=document.querySelector(".project-name");var n;n=o.value,t.makeProject(n,[]),c(),o.value=""})),{addProject:o,render:c}})();console.log("test"),o.render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,