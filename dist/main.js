(()=>{"use strict";class e{constructor(e,t){this.projectName=e,this.todo_list=t}}const t=(()=>{let t=JSON.parse(localStorage.getItem("task.projects"))||[];return{makeProject:function(o,c){let n=new e(o,c);var r;t.push(n),console.log({projectList:t}),r=t,localStorage.setItem("task.projects",JSON.stringify(r))},changeName:function(e,o){t[o].projectName=e},removeProject:function(e){t.splice(e,i)},projectList:t}})(),o=(()=>{const e=document.querySelector("#projects-container");function o(t){const o=document.createElement("div"),n=document.createElement("div"),r=document.createElement("button"),s=document.createElement("button");o.classList.add("project"),r.classList.add("btn"),s.classList.add("btn"),r.textContent="E",s.textContent="X",s.addEventListener("click",c),n.textContent=t,o.appendChild(n),o.appendChild(r),o.appendChild(s),e.appendChild(o)}function c(){const t=document.querySelector(".project");e.removeChild(t)}return document.querySelector("#add-project").addEventListener("submit",(e=>{e.preventDefault();const c=document.querySelector(".project-name");var n;o(c.value),n=c.value,t.makeProject(n,[]),c.value=""})),{addProject:o,saves:function(){let e=t.projectList;for(let t=0;t<e.length;t++)o(e[t].projectName)}}})();console.log("test"),o.saves()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZXR0ZXItdG9kby1saXN0Ly4vc3JjL3Byb2plY3QtbG9naWMuanMiLCJ3ZWJwYWNrOi8vYmV0dGVyLXRvZG8tbGlzdC8uL3NyYy9wcm9qZWN0LWRvbS5qcyIsIndlYnBhY2s6Ly9iZXR0ZXItdG9kby1saXN0Ly4vc3JjL3Rlc3QuanMiLCJ3ZWJwYWNrOi8vYmV0dGVyLXRvZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJQcm9qZWN0IiwiY29uc3RydWN0b3IiLCJwcm9qZWN0TmFtZSIsInRvZG9fbGlzdCIsInRoaXMiLCJwcm9qZWN0TGlzdCIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJtYWtlUHJvamVjdCIsIm9iaiIsInByb2plY3QiLCJwdXNoIiwiY29uc29sZSIsImxvZyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJjaGFuZ2VOYW1lIiwibmV3TmFtZSIsImluZGV4IiwicmVtb3ZlUHJvamVjdCIsInNwbGljZSIsImkiLCJwcm9qZWN0Q29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYWRkUHJvamVjdCIsImlucHV0TmFtZSIsImNyZWF0ZUVsZW1lbnQiLCJlZGl0IiwiZGVsIiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZGVsZXRlUHJvamVjdCIsImFwcGVuZENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJlIiwicHJldmVudERlZmF1bHQiLCJwcm9qZWN0VGV4dCIsInZhbHVlIiwic2F2ZXMiLCJzYXZlZExpc3QiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiJtQkFBQSxNQUFNQSxFQUNMQyxZQUFZQyxFQUFhQyxHQUN4QkMsS0FBS0YsWUFBY0EsRUFDbkJFLEtBQUtELFVBQVlBLEdBSW5CLE1BeUJBLEVBekJxQixNQUNwQixJQUFJRSxFQUFjQyxLQUFLQyxNQUFNQyxhQUFhQyxRQUFRLG1CQUFxQixHQXFCdkUsTUFBTyxDQUFFQyxZQWZULFNBQXFCUixFQUFhQyxHQUNqQyxJQUFJUSxFQUFNLElBQUlYLEVBQVFFLEVBQWFDLEdBTHBDLElBQXFCUyxFQU1wQlAsRUFBWVEsS0FBS0YsR0FDakJHLFFBQVFDLElBQUksQ0FBRVYsZ0JBUE1PLEVBUVJQLEVBUFpHLGFBQWFRLFFBQVEsZ0JBQWlCVixLQUFLVyxVQUFVTCxLQWtCaENNLFdBSnRCLFNBQW9CQyxFQUFTQyxHQUM1QmYsRUFBWWUsR0FBT2xCLFlBQWNpQixHQUdBRSxjQVJsQyxTQUF1QkQsR0FDdEJmLEVBQVlpQixPQUFPRixFQUFPRyxJQU9zQmxCLGdCQXRCN0IsR0NpRHJCLEVBdERtQixNQUNsQixNQUFNbUIsRUFBbUJDLFNBQVNDLGNBQWMsdUJBa0JoRCxTQUFTQyxFQUFXQyxHQUNuQixNQUFNaEIsRUFBVWEsU0FBU0ksY0FBYyxPQUNqQzNCLEVBQWN1QixTQUFTSSxjQUFjLE9BQ3JDQyxFQUFPTCxTQUFTSSxjQUFjLFVBQzlCRSxFQUFNTixTQUFTSSxjQUFjLFVBRW5DakIsRUFBUW9CLFVBQVVDLElBQUksV0FDdEJILEVBQUtFLFVBQVVDLElBQUksT0FDbkJGLEVBQUlDLFVBQVVDLElBQUksT0FDbEJILEVBQUtJLFlBQWMsSUFDbkJILEVBQUlHLFlBQWMsSUFFbEJILEVBQUlJLGlCQUFpQixRQUFTQyxHQUU5QmxDLEVBQVlnQyxZQUFjTixFQUUxQmhCLEVBQVF5QixZQUFZbkMsR0FDcEJVLEVBQVF5QixZQUFZUCxHQUNwQmxCLEVBQVF5QixZQUFZTixHQUVwQlAsRUFBaUJhLFlBQVl6QixHQU85QixTQUFTd0IsSUFDUixNQUFNeEIsRUFBVWEsU0FBU0MsY0FBYyxZQUN2Q0YsRUFBaUJjLFlBQVkxQixHQUc5QixPQWpEb0JhLFNBQVNDLGNBQWMsZ0JBRS9CUyxpQkFBaUIsVUFBV0ksSUFDdkNBLEVBQUVDLGlCQUNGLE1BQU1DLEVBQWNoQixTQUFTQyxjQUFjLGlCQW9DNUMsSUFBMkJ4QixFQW5DMUJ5QixFQUFXYyxFQUFZQyxPQW1DR3hDLEVBbENSdUMsRUFBWUMsTUFtQzlCLGNBQXlCeEMsRUFBYSxJQWxDdEN1QyxFQUFZQyxNQUFRLE1BMENkLENBQUVmLGFBQVlnQixNQXZDckIsV0FDQyxJQUFJQyxFQUFZLGNBQ2hCLElBQUssSUFBSXJCLEVBQUksRUFBR0EsRUFBSXFCLEVBQVVDLE9BQVF0QixJQUNyQ0ksRUFBV2lCLEVBQVVyQixHQUFHckIsZ0JBZlIsR0NEbEJZLFFBQVFDLElBQUksUUNJYixXIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQcm9qZWN0IHtcblx0Y29uc3RydWN0b3IocHJvamVjdE5hbWUsIHRvZG9fbGlzdCkge1xuXHRcdHRoaXMucHJvamVjdE5hbWUgPSBwcm9qZWN0TmFtZTtcblx0XHR0aGlzLnRvZG9fbGlzdCA9IHRvZG9fbGlzdDtcblx0fVxufVxuXG5jb25zdCBwcm9qZWN0TG9naWMgPSAoKCkgPT4ge1xuXHRsZXQgcHJvamVjdExpc3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidGFzay5wcm9qZWN0c1wiKSkgfHwgW107XG5cblx0ZnVuY3Rpb24gc2F2ZVByb2plY3QocHJvamVjdCkge1xuXHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidGFzay5wcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0KSk7XG5cdH1cblxuXHRmdW5jdGlvbiBtYWtlUHJvamVjdChwcm9qZWN0TmFtZSwgdG9kb19saXN0KSB7XG5cdFx0bGV0IG9iaiA9IG5ldyBQcm9qZWN0KHByb2plY3ROYW1lLCB0b2RvX2xpc3QpO1xuXHRcdHByb2plY3RMaXN0LnB1c2gob2JqKTtcblx0XHRjb25zb2xlLmxvZyh7IHByb2plY3RMaXN0IH0pO1xuXHRcdHNhdmVQcm9qZWN0KHByb2plY3RMaXN0KTtcblx0fVxuXG5cdGZ1bmN0aW9uIHJlbW92ZVByb2plY3QoaW5kZXgpIHtcblx0XHRwcm9qZWN0TGlzdC5zcGxpY2UoaW5kZXgsIGkpO1xuXHR9XG5cblx0ZnVuY3Rpb24gY2hhbmdlTmFtZShuZXdOYW1lLCBpbmRleCkge1xuXHRcdHByb2plY3RMaXN0W2luZGV4XS5wcm9qZWN0TmFtZSA9IG5ld05hbWU7XG5cdH1cblxuXHRyZXR1cm4geyBtYWtlUHJvamVjdCwgY2hhbmdlTmFtZSwgcmVtb3ZlUHJvamVjdCwgcHJvamVjdExpc3QgfTtcbn0pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IHByb2plY3RMb2dpYztcbiIsImltcG9ydCBwcm9qZWN0TG9naWMgZnJvbSBcIi4vcHJvamVjdC1sb2dpYy5qc1wiO1xuXG5jb25zdCBwcm9qZWN0RE9NID0gKCgpID0+IHtcblx0Y29uc3QgcHJvamVjdENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvamVjdHMtY29udGFpbmVyXCIpO1xuXHRjb25zdCBwcm9qZWN0Rm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkLXByb2plY3RcIik7XG5cblx0cHJvamVjdEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRjb25zdCBwcm9qZWN0VGV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1uYW1lXCIpO1xuXHRcdGFkZFByb2plY3QocHJvamVjdFRleHQudmFsdWUpO1xuXHRcdGFkZFByb2plY3RUb0FycmF5KHByb2plY3RUZXh0LnZhbHVlKTtcblx0XHRwcm9qZWN0VGV4dC52YWx1ZSA9IFwiXCI7XG5cdH0pO1xuXG5cdGZ1bmN0aW9uIHNhdmVzKCkge1xuXHRcdGxldCBzYXZlZExpc3QgPSBwcm9qZWN0TG9naWMucHJvamVjdExpc3Q7XG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBzYXZlZExpc3QubGVuZ3RoOyBpKyspIHtcblx0XHRcdGFkZFByb2plY3Qoc2F2ZWRMaXN0W2ldLnByb2plY3ROYW1lKTtcblx0XHR9XG5cdH1cblxuXHRmdW5jdGlvbiBhZGRQcm9qZWN0KGlucHV0TmFtZSkge1xuXHRcdGNvbnN0IHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXHRcdGNvbnN0IHByb2plY3ROYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblx0XHRjb25zdCBlZGl0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcblx0XHRjb25zdCBkZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG5cdFx0cHJvamVjdC5jbGFzc0xpc3QuYWRkKFwicHJvamVjdFwiKTtcblx0XHRlZGl0LmNsYXNzTGlzdC5hZGQoXCJidG5cIik7XG5cdFx0ZGVsLmNsYXNzTGlzdC5hZGQoXCJidG5cIik7XG5cdFx0ZWRpdC50ZXh0Q29udGVudCA9IFwiRVwiO1xuXHRcdGRlbC50ZXh0Q29udGVudCA9IFwiWFwiO1xuXG5cdFx0ZGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBkZWxldGVQcm9qZWN0KTtcblxuXHRcdHByb2plY3ROYW1lLnRleHRDb250ZW50ID0gaW5wdXROYW1lO1xuXG5cdFx0cHJvamVjdC5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZSk7XG5cdFx0cHJvamVjdC5hcHBlbmRDaGlsZChlZGl0KTtcblx0XHRwcm9qZWN0LmFwcGVuZENoaWxkKGRlbCk7XG5cblx0XHRwcm9qZWN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHByb2plY3QpO1xuXHR9XG5cblx0ZnVuY3Rpb24gYWRkUHJvamVjdFRvQXJyYXkocHJvamVjdE5hbWUpIHtcblx0XHRwcm9qZWN0TG9naWMubWFrZVByb2plY3QocHJvamVjdE5hbWUsIFtdKTtcblx0fVxuXG5cdGZ1bmN0aW9uIGRlbGV0ZVByb2plY3QoKSB7XG5cdFx0Y29uc3QgcHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdFwiKTtcblx0XHRwcm9qZWN0Q29udGFpbmVyLnJlbW92ZUNoaWxkKHByb2plY3QpO1xuXHR9XG5cblx0cmV0dXJuIHsgYWRkUHJvamVjdCwgc2F2ZXMgfTtcbn0pKCk7XG5cbmV4cG9ydCBkZWZhdWx0IHByb2plY3RET007XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0ZXN0KCkge1xuXHRjb25zb2xlLmxvZyhcInRlc3RcIik7XG59XG4iLCJpbXBvcnQgdGVzdCBmcm9tIFwiLi90ZXN0LmpzXCI7XG5pbXBvcnQgcHJvamVjdExvZ2ljIGZyb20gXCIuL3Byb2plY3QtbG9naWMuanNcIjtcbmltcG9ydCBwcm9qZWN0RE9NIGZyb20gXCIuL3Byb2plY3QtZG9tLmpzXCI7XG5cbnRlc3QoKTtcbnByb2plY3RET00uc2F2ZXMoKTtcbnByb2plY3RET007XG4iXSwic291cmNlUm9vdCI6IiJ9