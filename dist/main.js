(()=>{"use strict";class e{constructor(e,t,o){this.projectName=e,this.todo_list=t,this.selected=!1}}const t=(()=>{let t=JSON.parse(localStorage.getItem("task.projects"))||[];function o(e){localStorage.setItem("task.projects",JSON.stringify(e))}return{makeProject:function(c,n){let r=new e(c,n);t.push(r),console.log({projectList:t}),o(t)},changeName:function(e,c){t[c].projectName=e,o(t)},removeProject:function(e){t.splice(e,1),o(t)},select:function(e,c){t[e].selected=c,o(t)},projectList:t}})();class o{constructor(e,t,o,c,n){this.todoName=e,this.description=t,this.date=o,this.priority=c,this.completed=!1}}const c=(()=>{let e=[];return{isSelected:function(){let e=t.projectList;for(let t=0;t<e.length;t++)if(!0===e[t].selected)return t},makeTodo:function(t,c,n,r){let l=new o(t,c,n,r);return e.push(l),l}}})(),n=(()=>{function e(){const e=document.querySelector(".modal"),t=document.querySelector(".modal-overlay");e.classList.toggle("closed"),t.classList.toggle("closed")}function o(){document.querySelector("#todo-btn").classList.add("closed")}return document.querySelector("#modal-form").addEventListener("submit",(o=>{o.preventDefault(),function(){const e=document.querySelector("#todo-name"),o=document.querySelector("#todo-description"),n=document.querySelector("#todo-date"),r=document.querySelector("#priority");let l=c.makeTodo(e.value,o.value,n.value,r.value),s=c.isSelected();t.projectList[s].todo_list.push(l),console.log(t.projectList[s])}(),e()})),{addTodoButton:function(){if(void 0!==c.isSelected()){const t=document.querySelector("#todo-btn");t.classList.remove("closed"),document.querySelector("#modal-exit").addEventListener("click",e),t.addEventListener("click",e)}else o()},removeTodoButton:o}})(),r=(()=>{const e=document.querySelector("#projects-container");function o(o,n){const l=document.createElement("div"),d=document.createElement("div"),i=document.createElement("button"),u=document.createElement("button");l.classList.add("project"),d.classList.add("project-title"),i.classList.add("btn"),u.classList.add("btn"),i.textContent="E",u.textContent="X",d.addEventListener("click",(e=>{e.stopPropagation(),s(),t.select(n,!0),r()})),i.addEventListener("click",(e=>{e.stopPropagation(),function(e){const o=document.querySelectorAll(".project"),c=document.querySelectorAll(".project-title"),n=document.createElement("input");n.classList.add("edit-text"),n.setAttribute("type","text"),n.setAttribute("maxlength","10"),n.value=t.projectList[e].projectName,o[e].removeChild(c[e]),o[e].appendChild(n),n.addEventListener("keypress",(o=>{"Enter"===o.key&&(console.log("yes"),t.changeName(n.value,e),r())}))}(n)})),u.addEventListener("click",(o=>{o.stopPropagation(),function(o){const n=document.querySelectorAll(".project");e.removeChild(n[o]),t.removeProject(o),r(),console.log(c.isSelected())}(n)})),d.textContent=o,l.appendChild(d),l.appendChild(i),l.appendChild(u),e.appendChild(l)}function r(){!function(){for(;e.firstChild;)e.removeChild(e.firstChild)}();let c=0,r=t.projectList;for(console.log(r);c<r.length;c++)o(r[c].projectName,c),!0===r[c].selected&&(l(c),n.addTodoButton())}function l(e){s(),t.select(e,!0),document.querySelectorAll(".project")[e].style.cssText="background-color: lightblue"}function s(){for(let e=0;e<t.projectList.length;e++)t.select(e,!1)}return document.querySelector("#add-project").addEventListener("submit",(e=>{e.preventDefault();const o=document.querySelector(".project-name");var c;c=o.value,t.makeProject(c,[]),r(),o.value=""})),{addProject:o,render:r}})();console.log("test"),r.render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,